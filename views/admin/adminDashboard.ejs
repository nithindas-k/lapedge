<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../../public/css/bootstrap.min.css">
    <link rel="stylesheet" href="../../public/css/admin.css">
</head>
<body>
    <style>
        .main-div {
            display: flex;
            
        }
        .hello {
            position: fixed;
            z-index: 2000;
        }
        .chart-container {
    width: 900px;
    height: 600px;
    padding: 40px;
    background-color: #222;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5);
  }
  
  .chart-title {
    color: rgb(0, 0, 0);
    
    margin-bottom: 70px;
  
  }
  
  .chart {  
    display: flex;
    align-items: flex-end;
    height: 400px;
    gap: 40px;
    padding: 0 40px 40px 60px;
    border-bottom: 2px solid #333;
    position: relative;
  }
  
  .bar {
    width: 80px;
    transition: height 0.3s ease;
    position: relative;
    border-radius: 6px 6px 0 0;
  }
  
  .bar:hover {
    opacity: 0.8;
    transform: scale(1.05);
  }
  
  .bar::after {
    content: attr(data-value);
    position: absolute;
    top: -25px;
    left: 50%;
    transform: translateX(-50%);
    color: #fff;
    font-size: 14px;
  }
  
  .bar:nth-child(1) { background-color: #B76666; height: 200px; }
  .bar:nth-child(2) { background-color: #4682B4; height: 360px; }
  .bar:nth-child(3) { background-color: #DAA520; height: 60px; }
  .bar:nth-child(4) { background-color: #40A4A4; height: 100px; }
  .bar:nth-child(5) { background-color: #663399; height: 40px; }
  .bar:nth-child(6) { background-color: #CD853F; height: 60px; }
  
  .y-axis {
    position: absolute;
    left: -10px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    color: #999;
    font-size: 16px;
  }
  
  .x-axis {
    display: flex;
    gap: 40px;
    margin-top: 20px;
    padding-left: 60px;
    color: #999;
    font-size: 16px;
  }
  
  .x-label {
    width: 80px;
    text-align: center;
  }
  
  .grid-lines {
    position: absolute;
    width: calc(100% - 60px);
    height: 100%;
    right: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    pointer-events: none;
  }
  
  .grid-line {
    width: 100%;
    height: 1px;
    background-color: #333;
  }
    </style>
    <div class="main-div">
        <%-include("../partials/adminNavbar") %>
      <div class="hello"> 
        <%-include('../partials/adminSidebar')%>
      </div>
        <div class="main-panel">
            <div class="content-wrapper">
              <div class="row">
                <div class="col-12 grid-margin stretch-card">
                  <div class="card corona-gradient-card">
                    <div class="card-body py-0 px-0 px-sm-3">
                      <div class="row align-items-center">
                        <div class="col-4 col-sm-3 col-xl-2">
                          <img src="assets/images/dashboard/Group126@2x.png" class="gradient-corona-img img-fluid" alt="">
                        </div>
                        <div class="col-5 col-sm-7 col-xl-8 p-0">
                          <h4 class="mb-1 mb-sm-0">Want even more features?</h4>
                          <p class="mb-0 font-weight-normal d-none d-sm-block">Check out our Pro version with 5 unique layouts!</p>
                        </div>
                        <div class="col-3 col-sm-2 col-xl-2 pl-0 text-center">
                          <span>
                            <a href="https://www.bootstrapdash.com/product/corona-admin-template/" target="_blank" class="btn btn-outline-light btn-rounded get-started-btn">Upgrade to PRO</a>
                          </span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="chart-container">
                <select id="chartSelect" class="chart-title">
                    <option value="products">Best Selling Products</option>
                    <option value="categories">Best Selling Categories</option>
                </select>
                <input type="hidden"  id="topproduct"   value="<%= JSON.stringify(topProducts) %>">
                <input type="hidden"  id="topcategories"   value="<%= JSON.stringify(topCategories) %>">
        
                <div class="chart">
                    <canvas id="myChart" width="900" height="400"></canvas>
                </div>
            </div>
              
              
              
              
              
              
                
                
              
              
            
          </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
q
    <script>

      const topProducts =  JSON.parse(document.getElementById("topproduct").value) 
      const topCategories =  JSON.parse(document.getElementById("topcategories").value) 
     

      
        

      console.log(topProducts);
      console.log(topCategories)
       
      

      
      let chartData = {
          labels: topProducts.map(product => product.name),
          datasets: [{
              label: 'Total Sold',
              data: topProducts.map(product => product.totalSold),
              backgroundColor: 'rgba(75, 192, 192, 0.2)',
              borderColor: 'rgba(75, 192, 192, 1)',
              borderWidth: 1
          }]
      };

   
      const ctx = document.getElementById('myChart').getContext('2d');
      const myChart = new Chart(ctx, {
          type: 'bar',
          data: chartData,
          options: {
              scales: {
                  y: { beginAtZero: true }
              }
          }
      });

     
      document.getElementById('chartSelect').addEventListener('change', function (e) {
          const value = e.target.value;

          if (value === 'products') {
              chartData = {
                  labels: topProducts.map(product => product.name),
                  datasets: [{
                      label: 'Total Sold',
                      data: topProducts.map(product => product.totalSold),
                      backgroundColor: 'rgba(75, 192, 192, 0.2)',
                      borderColor: 'rgba(75, 192, 192, 1)',
                      borderWidth: 1
                  }]
              };
          } else if (value === 'categories') {
              chartData = {
                  labels: topCategories.map(cat => cat.categoryDetails.name),
                  datasets: [{
                      label: 'Total Sold',
                      data: topCategories.map(cat => cat.total),
                      backgroundColor: 'rgba(153, 102, 255, 0.2)',
                      borderColor: 'rgba(153, 102, 255, 1)',
                      borderWidth: 1
                  }]
              };
          } 

    
          myChart.data = chartData;
          myChart.update();
      });
  </script>

    
</body>
</html>